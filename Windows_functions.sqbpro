<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/godwi/OneDrive/Desktop/SQL Project/Window_functions.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="150"/><column_width id="3" width="1686"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,13:mainManufacturers"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="ADDRESS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="2" mode="0"/></sort><column_widths><column index="1" value="105"/><column index="2" value="155"/><column index="3" value="172"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Affiliated_With" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="117"/><column index="2" value="142"/><column index="3" value="200"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Appointment" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="7" mode="1"/></sort><column_widths><column index="1" value="175"/><column index="2" value="189"/><column index="3" value="188"/><column index="4" value="244"/><column index="5" value="221"/><column index="6" value="210"/><column index="7" value="258"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Block" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="61"/><column index="2" value="61"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Department" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="167"/><column index="2" value="160"/><column index="3" value="73"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Manufacturers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="61"/><column index="2" value="67"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Medication" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="71"/><column index="2" value="114"/><column index="3" value="208"/><column index="4" value="136"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Nurse" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="96"/><column index="2" value="193"/><column index="3" value="187"/><column index="4" value="197"/><column index="5" value="208"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="On_Call" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="229"/><column index="2" value="224"/><column index="3" value="228"/><column index="4" value="352"/><column index="5" value="282"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PEOPLE" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="128"/><column index="2" value="117"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Patient" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="271"/><column index="2" value="233"/><column index="3" value="270"/><column index="4" value="228"/><column index="5" value="215"/><column index="6" value="158"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Physician" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="235"/><column index="2" value="279"/><column index="3" value="302"/><column index="4" value="194"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Prescribes" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="214"/><column index="2" value="238"/><column index="3" value="280"/><column index="4" value="268"/><column index="5" value="214"/><column index="6" value="154"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Procedures" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="61"/><column index="2" value="318"/><column index="3" value="183"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Room" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="70"/><column index="2" value="61"/><column index="3" value="85"/><column index="4" value="86"/><column index="5" value="94"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Stay" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="65"/><column index="2" value="70"/><column index="3" value="57"/><column index="4" value="73"/><column index="5" value="73"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Trained_In" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="81"/><column index="2" value="89"/><column index="3" value="131"/><column index="4" value="146"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Undergoes" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="269"/><column index="2" value="261"/><column index="3" value="61"/><column index="4" value="73"/><column index="5" value="81"/><column index="6" value="117"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="cran_logs_2015_01_01" show_row_id="0" encoding="UTF-8" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="152"/><column index="2" value="144"/><column index="3" value="100"/><column index="4" value="154"/><column index="5" value="193"/><column index="6" value="242"/><column index="7" value="275"/><column index="8" value="141"/><column index="9" value="161"/><column index="10" value="182"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats><column index="1" value=""/></display_formats><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- Creating Table Manufacturers
CREATE TABLE Manufacturers (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

-- Creating Table Products
CREATE TABLE Products (
    id INT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL NOT NULL,
    manufacturer_id INT,
    FOREIGN KEY (manufacturer_id) REFERENCES Manufacturers(id)
);

-- Adding or inserting records to Table Manufacturers
INSERT INTO Manufacturers (id, name) VALUES 
(1, 'TechGuru'),
(2, 'GreenLeaf'),
(3, 'BlueOcean');

-- Adding or inserting records to Table Products
INSERT INTO Products (id, name, price, manufacturer_id) VALUES 
(1, 'Laptop', 999.99, 1),
(2, 'Smartphone', 599.99, 1),
(3, 'Headphones', 199.99, 1),
(4, 'Smartwatch', 299.99, 1),
(5, 'Camera', 499.99, 1),
(6, 'Refrigerator', 899.99, 2),
(7, 'Microwave', 149.99, 2),
(8, 'Blender', 99.99, 2),
(9, 'Toaster', 49.99, 2),
(10, 'Coffee Maker', 89.99, 2),
(11, 'Tent', 199.99, 3),
(12, 'Backpack', 79.99, 3),
(13, 'Hiking Boots', 129.99, 3),
(14, 'Sleeping Bag', 59.99, 3),
(15, 'Camping Stove', 99.99, 3),
(16, 'Tablet', 399.99, 1),
(17, 'E-Reader', 129.99, 1),
(18, 'Portable Speaker', 59.99, 1),
(19, 'Action Camera', 349.99, 1),
(20, 'GPS Watch', 249.99, 1);

--(1)
-- Let's say we want to see the average price of all the products created by each manufacturer. 
SELECT M.name, AVG(P.price) AS [Average Price]
FROM Manufacturers M,Products P
WHERE M.id =P.manufacturer_id
GROUP BY M.name;

------------Alternatively------------
SELECT M.name, AVG(price) AS Average_Price
FROM Manufacturers M
JOIN Products P
ON M.id = P.manufacturer_id
GROUP BY M.name ;


--(2)
-- What about writing a query that shows me a row of each product and their values against the aggregated value above.

SELECT P.name AS ProductName, M.name AS ManufacturerName, P.price AS Price, AVG(P.price) OVER(PARTITION BY  P.manufacturer_id) AS Average_Price_Per_Manufacturer -- PARTITION BY helped in groupping on ohw the Average Price will be calculated.
FROM Manufacturers M
JOIN Products P
ON M.id = P.manufacturer_id;

--(3)
-- What about against the min and max priced product per manufacturer?
SELECT P.name AS ProductName, M.name AS ManufacturerName, P.price AS Price, 
MIN(P.price) OVER(PARTITION BY  P.manufacturer_id) AS Min_Price_Per_Manufacturer,
MAX(P.price) OVER(PARTITION BY  P.manufacturer_id) AS Max_Price_Per_Manufacturer,
AVG(P.price) OVER(PARTITION BY  P.manufacturer_id) AS Average_Price_Per_Manufacturer

FROM Manufacturers M
JOIN Products P
ON M.id = P.manufacturer_id
ORDER BY ManufacturerName, Price;

--(4)
-- Alright, let's rank the products by price per manufacturer, from lowest to highest
SELECT P.name AS ProductName, M.name AS ManufacturerName, P.price AS Price, 
MIN(P.price) OVER(PARTITION BY  P.manufacturer_id) AS Min_Price_Per_Manufacturer,
MAX(P.price) OVER(PARTITION BY  P.manufacturer_id) AS Max_Price_Per_Manufacturer,
AVG(P.price) OVER(PARTITION BY  P.manufacturer_id) AS Average_Price_Per_Manufacturer,
RANK() OVER(PARTITION BY  P.manufacturer_id ORDER BY P.price ASC) AS Price_Rank 

FROM Manufacturers M
JOIN Products P
ON M.id = P.manufacturer_id
ORDER BY ManufacturerName, Price;

--(5)
-- Ok, cool. But there are so many products made by each manufacturer. I want to see only the top 3 of each instead of the million products each make.
SELECT*
FROM
(SELECT P.name AS ProductName, M.name AS ManufacturerName, P.price AS Price, 
MIN(P.price) OVER(PARTITION BY  P.manufacturer_id) AS Min_Price_Per_Manufacturer,
MAX(P.price) OVER(PARTITION BY  P.manufacturer_id) AS Max_Price_Per_Manufacturer,
AVG(P.price) OVER(PARTITION BY  P.manufacturer_id) AS Average_Price_Per_Manufacturer,
RANK() OVER(PARTITION BY  P.manufacturer_id ORDER BY P.price DESC) AS Price_Rank 

FROM Manufacturers M
JOIN Products P
ON M.id = P.manufacturer_id
ORDER BY ManufacturerName, Price ) AS TOP_3
WHERE Price_Rank &lt;=3;




</sql><current_tab id="0"/></tab_sql></sqlb_project>
